{
  "api/GuJian3Library.Converters.Data.html": {
    "href": "api/GuJian3Library.Converters.Data.html",
    "title": "Namespace GuJian3Library.Converters.Data | GuJian3 Manager",
    "keywords": "Namespace GuJian3Library.Converters.Data Classes Reader Converter from BinaryFormat to NodeContainer. Writer Converter from NodeContainer to BinaryFormat."
  },
  "api/GuJian3Library.Converters.Data.Reader.html": {
    "href": "api/GuJian3Library.Converters.Data.Reader.html",
    "title": "Class Reader | GuJian3 Manager",
    "keywords": "Class Reader Converter from BinaryFormat to NodeContainer. Inheritance Object Reader Namespace : GuJian3Library.Converters.Data Assembly : GuJian3Library.dll Syntax public class Reader : IConverter<BinaryFormat, NodeContainerFormat> Methods | Improve this Doc View Source Convert(BinaryFormat) Reads a GuJian3 data file. Declaration public NodeContainerFormat Convert(BinaryFormat source) Parameters Type Name Description BinaryFormat source The GuJian3 data file. Returns Type Description NodeContainerFormat The NodeContainerFormat."
  },
  "api/GuJian3Library.Converters.Data.Writer.html": {
    "href": "api/GuJian3Library.Converters.Data.Writer.html",
    "title": "Class Writer | GuJian3 Manager",
    "keywords": "Class Writer Converter from NodeContainer to BinaryFormat. Inheritance Object Writer Namespace : GuJian3Library.Converters.Data Assembly : GuJian3Library.dll Syntax public class Writer : IConverter<NodeContainerFormat, BinaryFormat> Methods | Improve this Doc View Source Convert(NodeContainerFormat) Writes a GuJian3 data file. Declaration public BinaryFormat Convert(NodeContainerFormat source) Parameters Type Name Description NodeContainerFormat source The GuJian3 data file. Returns Type Description BinaryFormat The NodeContainerFormat."
  },
  "api/GuJian3Library.Converters.ExeSection.html": {
    "href": "api/GuJian3Library.Converters.ExeSection.html",
    "title": "Namespace GuJian3Library.Converters.ExeSection | GuJian3 Manager",
    "keywords": "Namespace GuJian3Library.Converters.ExeSection Classes Reader Converter from BinaryFormat (exe section dump) to GameDataFormat. Writer Converter from GameDataFormat to BinaryFormat."
  },
  "api/GuJian3Library.Converters.ExeSection.Reader.html": {
    "href": "api/GuJian3Library.Converters.ExeSection.Reader.html",
    "title": "Class Reader | GuJian3 Manager",
    "keywords": "Class Reader Converter from BinaryFormat (exe section dump) to GameDataFormat. Inheritance Object Reader Implements IInitializer < Dictionary < String , String >> Namespace : GuJian3Library.Converters.ExeSection Assembly : GuJian3Library.dll Syntax public class Reader : IConverter<BinaryFormat, GameDataFormat>, IInitializer<Dictionary<string, string>> Methods | Improve this Doc View Source Convert(BinaryFormat) Reads a GuJian3 game data dump. Declaration public GameDataFormat Convert(BinaryFormat source) Parameters Type Name Description BinaryFormat source The file in BinaryFormat. Returns Type Description GameDataFormat The game data structure. | Improve this Doc View Source Initialize(Dictionary<String, String>) Initialize the string replacements. Declaration public void Initialize(Dictionary<string, string> parameters) Parameters Type Name Description Dictionary < String , String > parameters The string replacements. Implements IInitializer<>"
  },
  "api/GuJian3Library.Converters.ExeSection.Writer.html": {
    "href": "api/GuJian3Library.Converters.ExeSection.Writer.html",
    "title": "Class Writer | GuJian3 Manager",
    "keywords": "Class Writer Converter from GameDataFormat to BinaryFormat. Inheritance Object Writer Namespace : GuJian3Library.Converters.ExeSection Assembly : GuJian3Library.dll Syntax public class Writer : IConverter<GameDataFormat, BinaryFormat> Methods | Improve this Doc View Source Convert(GameDataFormat) Write a GuJian 3 game data dump. Declaration public BinaryFormat Convert(GameDataFormat source) Parameters Type Name Description GameDataFormat source The game data. Returns Type Description BinaryFormat The binary file."
  },
  "api/GuJian3Library.Converters.Index.html": {
    "href": "api/GuJian3Library.Converters.Index.html",
    "title": "Namespace GuJian3Library.Converters.Index | GuJian3 Manager",
    "keywords": "Namespace GuJian3Library.Converters.Index Classes Reader Converter from BinaryFormat to IndexFile. Writer Converter from IndexFile to BinaryFormat."
  },
  "api/GuJian3Library.Converters.Index.Reader.html": {
    "href": "api/GuJian3Library.Converters.Index.Reader.html",
    "title": "Class Reader | GuJian3 Manager",
    "keywords": "Class Reader Converter from BinaryFormat to IndexFile. Inheritance Object Reader Namespace : GuJian3Library.Converters.Index Assembly : GuJian3Library.dll Syntax public class Reader : IConverter<BinaryFormat, IndexFile> Methods | Improve this Doc View Source Convert(BinaryFormat) Reads a GuJian3 index file. Declaration public IndexFile Convert(BinaryFormat source) Parameters Type Name Description BinaryFormat source The file in BinaryFormat. Returns Type Description IndexFile The file."
  },
  "api/GuJian3Library.Converters.Index.Writer.html": {
    "href": "api/GuJian3Library.Converters.Index.Writer.html",
    "title": "Class Writer | GuJian3 Manager",
    "keywords": "Class Writer Converter from IndexFile to BinaryFormat. Inheritance Object Writer Namespace : GuJian3Library.Converters.Index Assembly : GuJian3Library.dll Syntax public class Writer : IConverter<IndexFile, BinaryFormat> Methods | Improve this Doc View Source Convert(IndexFile) Writes a GuJian3 index file. Declaration public BinaryFormat Convert(IndexFile source) Parameters Type Name Description IndexFile source The file in IndexFile format. Returns Type Description BinaryFormat The binary format."
  },
  "api/GuJian3Library.Converters.Oodle.Compress.html": {
    "href": "api/GuJian3Library.Converters.Oodle.Compress.html",
    "title": "Class Compress | GuJian3 Manager",
    "keywords": "Class Compress Compress files using Oodle. Inheritance Object Compress Implements IInitializer < CompressorParameters > Namespace : GuJian3Library.Converters.Oodle Assembly : GuJian3Library.dll Syntax public class Compress : IConverter<BinaryFormat, OodleFile>, IInitializer<CompressorParameters> Methods | Improve this Doc View Source Convert(BinaryFormat) Compress a BinaryFormat using Oodle. Declaration public OodleFile Convert(BinaryFormat source) Parameters Type Name Description BinaryFormat source Original format. Returns Type Description OodleFile The compressed file. | Improve this Doc View Source Initialize(CompressorParameters) Initializes the compressor parameters. Declaration public void Initialize(CompressorParameters parameters) Parameters Type Name Description CompressorParameters parameters Compressor configuration. Implements IInitializer<>"
  },
  "api/GuJian3Library.Converters.Oodle.CompressorParameters.html": {
    "href": "api/GuJian3Library.Converters.Oodle.CompressorParameters.html",
    "title": "Class CompressorParameters | GuJian3 Manager",
    "keywords": "Class CompressorParameters Parameters for Oodle compressor. Inheritance Object CompressorParameters Namespace : GuJian3Library.Converters.Oodle Assembly : GuJian3Library.dll Syntax public class CompressorParameters : object Constructors | Improve this Doc View Source CompressorParameters() Initializes a new instance of the CompressorParameters class. Declaration public CompressorParameters() Properties | Improve this Doc View Source CompressionLevel Gets or sets the compression level. Declaration public OodleWrapper.OodleLZ_CompressionLevel CompressionLevel { get; set; } Property Value Type Description OodleWrapper.OodleLZ_CompressionLevel | Improve this Doc View Source Compressor Gets or sets the compression algorithm type. Declaration public OodleWrapper.OodleLZ_Compressor Compressor { get; set; } Property Value Type Description OodleWrapper.OodleLZ_Compressor | Improve this Doc View Source OutputStream Gets or sets the DataStream to write the file. Declaration public DataStream OutputStream { get; set; } Property Value Type Description DataStream Remarks It can be null. In that case, it will be written in memory."
  },
  "api/GuJian3Library.Converters.Oodle.Decompress.html": {
    "href": "api/GuJian3Library.Converters.Oodle.Decompress.html",
    "title": "Class Decompress | GuJian3 Manager",
    "keywords": "Class Decompress Decompress Oodle compressed files used in GuJian 3. Inheritance Object Decompress Namespace : GuJian3Library.Converters.Oodle Assembly : GuJian3Library.dll Syntax public class Decompress : IConverter<OodleFile, BinaryFormat> Methods | Improve this Doc View Source Convert(OodleFile) Decompress an Oodle compressed BinaryFormat. Declaration public BinaryFormat Convert(OodleFile source) Parameters Type Name Description OodleFile source Compressed format. Returns Type Description BinaryFormat The decompressed binary."
  },
  "api/GuJian3Library.Converters.Oodle.html": {
    "href": "api/GuJian3Library.Converters.Oodle.html",
    "title": "Namespace GuJian3Library.Converters.Oodle | GuJian3 Manager",
    "keywords": "Namespace GuJian3Library.Converters.Oodle Classes Compress Compress files using Oodle. CompressorParameters Parameters for Oodle compressor. Decompress Decompress Oodle compressed files used in GuJian 3. OodleWrapper Oodle library wrapper. Code from https://github.com/JKAnderson/SoulsFormats/blob/master/SoulsFormats/Util/Oodle26.cs . Reader Reads Oodle compressed files used in GuJian 3. Writer Writes Oodle compressed files used in GuJian 3. Enums OodleWrapper.OodleLZ_CompressionLevel Oodle compression level. OodleWrapper.OodleLZ_Compressor Oodle compressors."
  },
  "api/GuJian3Library.Converters.Oodle.OodleWrapper.html": {
    "href": "api/GuJian3Library.Converters.Oodle.OodleWrapper.html",
    "title": "Class OodleWrapper | GuJian3 Manager",
    "keywords": "Class OodleWrapper Oodle library wrapper. Code from https://github.com/JKAnderson/SoulsFormats/blob/master/SoulsFormats/Util/Oodle26.cs . Inheritance Object OodleWrapper Namespace : GuJian3Library.Converters.Oodle Assembly : GuJian3Library.dll Syntax public static class OodleWrapper : object Methods | Improve this Doc View Source Compress(Byte[], OodleWrapper.OodleLZ_Compressor, OodleWrapper.OodleLZ_CompressionLevel, Int32) Compress the source array. Declaration public static byte[] Compress(byte[] source, OodleWrapper.OodleLZ_Compressor compressor, OodleWrapper.OodleLZ_CompressionLevel level, int seekChunkLength) Parameters Type Name Description Byte [] source Source data. OodleWrapper.OodleLZ_Compressor compressor Compressor to use. OodleWrapper.OodleLZ_CompressionLevel level Level of compression. Int32 seekChunkLength Seek chunk length. Returns Type Description Byte [] The compressed bytes. | Improve this Doc View Source Decompress(Byte[], Int64) Decompress a byte array. Declaration public static byte[] Decompress(byte[] source, long uncompressedSize) Parameters Type Name Description Byte [] source Source data. Int64 uncompressedSize Real size. Returns Type Description Byte [] The decompressed bytes. | Improve this Doc View Source GetSeekChunkLen(Int64) Gets the seek chunk length based on the uncompressed size. Declaration public static int GetSeekChunkLen(long rawSize) Parameters Type Name Description Int64 rawSize Uncompressed size. Returns Type Description Int32 The seek chunk length."
  },
  "api/GuJian3Library.Converters.Oodle.OodleWrapper.OodleLZ_CompressionLevel.html": {
    "href": "api/GuJian3Library.Converters.Oodle.OodleWrapper.OodleLZ_CompressionLevel.html",
    "title": "Enum OodleWrapper.OodleLZ_CompressionLevel | GuJian3 Manager",
    "keywords": "Enum OodleWrapper.OodleLZ_CompressionLevel Oodle compression level. Namespace : GuJian3Library.Converters.Oodle Assembly : GuJian3Library.dll Syntax public enum OodleLZ_CompressionLevel : int Fields Name Description OodleLZ_CompressionLevel_Fast OodleLZ_CompressionLevel_Force32 OodleLZ_CompressionLevel_HyperFast OodleLZ_CompressionLevel_HyperFast1 OodleLZ_CompressionLevel_HyperFast2 OodleLZ_CompressionLevel_HyperFast3 OodleLZ_CompressionLevel_HyperFast4 OodleLZ_CompressionLevel_Invalid OodleLZ_CompressionLevel_Max OodleLZ_CompressionLevel_Min OodleLZ_CompressionLevel_None OodleLZ_CompressionLevel_Normal OodleLZ_CompressionLevel_Optimal OodleLZ_CompressionLevel_Optimal1 OodleLZ_CompressionLevel_Optimal2 OodleLZ_CompressionLevel_Optimal3 OodleLZ_CompressionLevel_Optimal4 OodleLZ_CompressionLevel_Optimal5 OodleLZ_CompressionLevel_SuperFast OodleLZ_CompressionLevel_VeryFast"
  },
  "api/GuJian3Library.Converters.Oodle.OodleWrapper.OodleLZ_Compressor.html": {
    "href": "api/GuJian3Library.Converters.Oodle.OodleWrapper.OodleLZ_Compressor.html",
    "title": "Enum OodleWrapper.OodleLZ_Compressor | GuJian3 Manager",
    "keywords": "Enum OodleWrapper.OodleLZ_Compressor Oodle compressors. Namespace : GuJian3Library.Converters.Oodle Assembly : GuJian3Library.dll Syntax public enum OodleLZ_Compressor : int Fields Name Description OodleLZ_Compressor_BitKnit OodleLZ_Compressor_Count OodleLZ_Compressor_Force32 OodleLZ_Compressor_Hydra OodleLZ_Compressor_Invalid OodleLZ_Compressor_Kraken OodleLZ_Compressor_Leviathan OodleLZ_Compressor_LZA OodleLZ_Compressor_LZB16 OodleLZ_Compressor_LZBLW OodleLZ_Compressor_LZH OodleLZ_Compressor_LZHLW OodleLZ_Compressor_LZNA OodleLZ_Compressor_LZNIB OodleLZ_Compressor_Mermaid OodleLZ_Compressor_None OodleLZ_Compressor_Selkie"
  },
  "api/GuJian3Library.Converters.Oodle.Reader.html": {
    "href": "api/GuJian3Library.Converters.Oodle.Reader.html",
    "title": "Class Reader | GuJian3 Manager",
    "keywords": "Class Reader Reads Oodle compressed files used in GuJian 3. Inheritance Object Reader Namespace : GuJian3Library.Converters.Oodle Assembly : GuJian3Library.dll Syntax public class Reader : IConverter<BinaryFormat, OodleFile> Methods | Improve this Doc View Source Convert(BinaryFormat) Reads an Oodle compressed BinaryFormat. Declaration public OodleFile Convert(BinaryFormat source) Parameters Type Name Description BinaryFormat source Compressed format. Returns Type Description OodleFile The mormat."
  },
  "api/GuJian3Library.Converters.Oodle.Writer.html": {
    "href": "api/GuJian3Library.Converters.Oodle.Writer.html",
    "title": "Class Writer | GuJian3 Manager",
    "keywords": "Class Writer Writes Oodle compressed files used in GuJian 3. Inheritance Object Writer Namespace : GuJian3Library.Converters.Oodle Assembly : GuJian3Library.dll Syntax public class Writer : IConverter<OodleFile, BinaryFormat> Methods | Improve this Doc View Source Convert(OodleFile) Writes an Oodle compressed BinaryFormat. Declaration public BinaryFormat Convert(OodleFile source) Parameters Type Name Description OodleFile source Compressed format. Returns Type Description BinaryFormat The binary."
  },
  "api/GuJian3Library.Converters.XXTEA.Decrypt.html": {
    "href": "api/GuJian3Library.Converters.XXTEA.Decrypt.html",
    "title": "Class Decrypt | GuJian3 Manager",
    "keywords": "Class Decrypt GuJian 3 file decrypter. Inheritance Object Decrypt Implements IConverter < BinaryFormat , BinaryFormat > Namespace : GuJian3Library.Converters.XXTEA Assembly : GuJian3Library.dll Syntax public class Decrypt : IInitializer<string>, IConverter<BinaryFormat, BinaryFormat> Methods | Improve this Doc View Source Convert(BinaryFormat) Decrypts a XXTEA encrypted BinaryFormat. Declaration public BinaryFormat Convert(BinaryFormat source) Parameters Type Name Description BinaryFormat source Encrypted format. Returns Type Description BinaryFormat The decrypted binary. | Improve this Doc View Source Initialize(String) Initializes the decryption parameters. Declaration public void Initialize(string parameters) Parameters Type Name Description String parameters Decryptor configuration. Implements IConverter<, >"
  },
  "api/GuJian3Library.Converters.XXTEA.Encrypt.html": {
    "href": "api/GuJian3Library.Converters.XXTEA.Encrypt.html",
    "title": "Class Encrypt | GuJian3 Manager",
    "keywords": "Class Encrypt GuJian 3 file encrypter. Inheritance Object Encrypt Implements IConverter < BinaryFormat , BinaryFormat > Namespace : GuJian3Library.Converters.XXTEA Assembly : GuJian3Library.dll Syntax public class Encrypt : IInitializer<string>, IConverter<BinaryFormat, BinaryFormat> Methods | Improve this Doc View Source Convert(BinaryFormat) Encrypts a BinaryFormat using XXTEA . Declaration public BinaryFormat Convert(BinaryFormat source) Parameters Type Name Description BinaryFormat source Binary format. Returns Type Description BinaryFormat The encrypted binary. | Improve this Doc View Source Initialize(String) Initializes the encryption parameters. Declaration public void Initialize(string parameters) Parameters Type Name Description String parameters Encryptor configuration. Implements IConverter<, >"
  },
  "api/GuJian3Library.Converters.XXTEA.html": {
    "href": "api/GuJian3Library.Converters.XXTEA.html",
    "title": "Namespace GuJian3Library.Converters.XXTEA | GuJian3 Manager",
    "keywords": "Namespace GuJian3Library.Converters.XXTEA Classes Decrypt GuJian 3 file decrypter. Encrypt GuJian 3 file encrypter."
  },
  "api/GuJian3Library.Formats.GameDataFormat.html": {
    "href": "api/GuJian3Library.Formats.GameDataFormat.html",
    "title": "Class GameDataFormat | GuJian3 Manager",
    "keywords": "Class GameDataFormat Structure of the exe dumped section. Inheritance Object GameDataFormat Namespace : GuJian3Library.Formats Assembly : GuJian3Library.dll Syntax public class GameDataFormat : IFormat Properties | Improve this Doc View Source Data Gets or sets the game data. Declaration public Dictionary<object, object> Data { get; set; } Property Value Type Description Dictionary < Object , Object > | Improve this Doc View Source Magic Gets or sets the id of the section. Declaration public uint Magic { get; set; } Property Value Type Description UInt32 | Improve this Doc View Source Strings Gets or sets the list of strings. Declaration public Dictionary<string, string> Strings { get; set; } Property Value Type Description Dictionary < String , String >"
  },
  "api/GuJian3Library.Formats.html": {
    "href": "api/GuJian3Library.Formats.html",
    "title": "Namespace GuJian3Library.Formats | GuJian3 Manager",
    "keywords": "Namespace GuJian3Library.Formats Classes GameDataFormat Structure of the exe dumped section. IndexFile GuJian 3 index file. Contains SHA-1 file hashes and names. OodleChunk Chunk of Oodle compressed data. OodleFile Representation of a Oodle compressed file. TRefGameData Structure for the 0x0F and 0x10 game data types. TupleGameData Structure for the 0x0D game data type."
  },
  "api/GuJian3Library.Formats.IndexFile.html": {
    "href": "api/GuJian3Library.Formats.IndexFile.html",
    "title": "Class IndexFile | GuJian3 Manager",
    "keywords": "Class IndexFile GuJian 3 index file. Contains SHA-1 file hashes and names. Inheritance Object IndexFile Namespace : GuJian3Library.Formats Assembly : GuJian3Library.dll Syntax public class IndexFile : IFormat Constructors | Improve this Doc View Source IndexFile() Initializes a new instance of the IndexFile class. Declaration public IndexFile() Properties | Improve this Doc View Source Hashes Gets the file hashes dictionary. Declaration public IDictionary<string, List<string>> Hashes { get; } Property Value Type Description IDictionary < String , List < String >> | Improve this Doc View Source Names Gets the file names dictionary. Declaration public IDictionary<string, string> Names { get; } Property Value Type Description IDictionary < String , String >"
  },
  "api/GuJian3Library.Formats.OodleChunk.html": {
    "href": "api/GuJian3Library.Formats.OodleChunk.html",
    "title": "Class OodleChunk | GuJian3 Manager",
    "keywords": "Class OodleChunk Chunk of Oodle compressed data. Inheritance Object OodleChunk Namespace : GuJian3Library.Formats Assembly : GuJian3Library.dll Syntax public class OodleChunk : object Properties | Improve this Doc View Source CompressedSize Gets or sets the chunk compressed size. Declaration public int CompressedSize { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Data Gets or sets the chunk data. Declaration public byte[] Data { get; set; } Property Value Type Description Byte [] | Improve this Doc View Source Size Gets or sets the chunk uncompressed size. Declaration public int Size { get; set; } Property Value Type Description Int32"
  },
  "api/GuJian3Library.Formats.OodleFile.html": {
    "href": "api/GuJian3Library.Formats.OodleFile.html",
    "title": "Class OodleFile | GuJian3 Manager",
    "keywords": "Class OodleFile Representation of a Oodle compressed file. Inheritance Object OodleFile Namespace : GuJian3Library.Formats Assembly : GuJian3Library.dll Syntax public class OodleFile : IFormat Constructors | Improve this Doc View Source OodleFile() Initializes a new instance of the OodleFile class. Declaration public OodleFile() Properties | Improve this Doc View Source Chunks Gets the list of compressed chunks. Declaration public List<OodleChunk> Chunks { get; } Property Value Type Description List < OodleChunk > | Improve this Doc View Source CompressedSize Gets or sets the compressed size. Declaration public long CompressedSize { get; set; } Property Value Type Description Int64 | Improve this Doc View Source Compression Gets or sets a value indicating the compression format. If the file is compressed, the value is 4. If not, the value is 0. Declaration public ushort Compression { get; set; } Property Value Type Description UInt16 | Improve this Doc View Source Crc16 Gets the header CRC-16 value. Declaration public ushort Crc16 { get; } Property Value Type Description UInt16 | Improve this Doc View Source Date Gets or sets the compression date. (time_t 64). Declaration public long Date { get; set; } Property Value Type Description Int64 | Improve this Doc View Source SeekChunkLength Gets or sets the seek chunk length used (needed for oodle algorithm). Declaration public int SeekChunkLength { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Size Gets or sets the uncompressed size. Declaration public long Size { get; set; } Property Value Type Description Int64"
  },
  "api/GuJian3Library.Formats.TRefGameData.html": {
    "href": "api/GuJian3Library.Formats.TRefGameData.html",
    "title": "Class TRefGameData | GuJian3 Manager",
    "keywords": "Class TRefGameData Structure for the 0x0F and 0x10 game data types. Inheritance Object TRefGameData Namespace : GuJian3Library.Formats Assembly : GuJian3Library.dll Syntax public class TRefGameData : object Properties | Improve this Doc View Source Value Gets or sets the value. Declaration public uint Value { get; set; } Property Value Type Description UInt32"
  },
  "api/GuJian3Library.Formats.TupleGameData.html": {
    "href": "api/GuJian3Library.Formats.TupleGameData.html",
    "title": "Class TupleGameData | GuJian3 Manager",
    "keywords": "Class TupleGameData Structure for the 0x0D game data type. Inheritance Object TupleGameData Namespace : GuJian3Library.Formats Assembly : GuJian3Library.dll Syntax public class TupleGameData : object Properties | Improve this Doc View Source Value1 Gets or sets the first value. Declaration public object Value1 { get; set; } Property Value Type Description Object | Improve this Doc View Source Value2 Gets or sets the second value. Declaration public object Value2 { get; set; } Property Value Type Description Object"
  },
  "CONTRIBUTING.html": {
    "href": "CONTRIBUTING.html",
    "title": "Contributing to the project | GuJian3 Manager",
    "keywords": "Contributing to the project Thanks for taking the time to contribute! ✨ In this document you will find all the information you need to make sure the project continues to be the high-quality product we want to be! Reporting issues Issues When reporting a problem, be as specific as possible. Ideally, you should provide an small snippet of code that reproduces the issue. Try to provide also the following information: OS: Linux / Windows / Mac OS Runtime: .NET Framework, Mono, .NET Core Version of the product Stacktrace if any What's happening and what you expect to happen Features If you want to ask for a new feature, first make sure it hasn't been reported yet by using the search box in the issue tab. Make sure that the feature aligns with the direction of the project. Pull Request Before starting a pull request, create an issue requesting the feature you would like to see and implement. If you are fixing a bug, create also an issue to be able to track the problem. State that you would like to work on that. The team will reply to the issue as soon as possible, discussing the proposal if needed. This guarantee that later on the Pull Request we don't reject the proposal without having a discussion first and we don't waste time. In general, the process to create a pull request is: Create an issue describing the bug or feature and state you would like to work on that. The team will cheer you and/or discuss with you the issue. Fork the project. Clone your forked project and create a git branch. Make the necessary code changes in as many commits as you want. The commit message should follow this convention: :emoji: Short description #IssueID Long description if needed. Create a pull request. After reviewing your changes and making any new commits if needed, the team will approve and merge it. For a complete list of emoji description see this repository . Code Guidelines We follow the DotNet Runtime coding style . File headers ✔️ DO put the license in the file header with this format: // // <FileName>.cs // // Author: // <AuthorName> <email@example.com> // // Copyright (c) <Year> <AuthorName> // // Permission is hereby granted, free of charge, to any person obtaining a copy // of this software and associated documentation files (the \"Software\"), to deal // in the Software without restriction, including without limitation the rights // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell // copies of the Software, and to permit persons to whom the Software is // furnished to do so, subject to the following conditions: // // The above copyright notice and this permission notice shall be included in // all copies or substantial portions of the Software. // // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN // THE SOFTWARE. Usings ✔️ DO put the using inside the namespace. ✔️ DO include all the namespaces you are using. ✔️ DO use the using statement for IDisposable types."
  },
  "dev/Changelog.html": {
    "href": "dev/Changelog.html",
    "title": "vNext (December 16, 2021) | GuJian3 Manager",
    "keywords": "vNext (December 16, 2021) As part of this release we had 3 issues closed. bugs #17 Use original text if translation is empty #18 Unescape the slash when reading po files. #19 Delete output files if exists v1.1.0 (December 11, 2021) As part of this release we had 3 issues closed. Documentation #14 Update build.cake enhancements #15 Update yarhl #16 Read and write text.bin v1.0.0 (December 04, 2021) As part of this release we had 1 issue closed. Documentation #14 Update build.cake"
  },
  "guides/Contributing.html": {
    "href": "guides/Contributing.html",
    "title": "Contributing to the project | GuJian3 Manager",
    "keywords": "Contributing to the project Thanks for taking the time to contribute! ✨ In this document you will find all the information you need to make sure the project continues to be the high-quality product we want to be! Reporting issues Issues When reporting a problem, be as specific as possible. Ideally, you should provide an small snippet of code that reproduces the issue. Try to provide also the following information: OS: Linux / Windows / Mac OS Runtime: .NET Framework, Mono, .NET Core Version of the product Stacktrace if any What's happening and what you expect to happen Features If you want to ask for a new feature, first make sure it hasn't been reported yet by using the search box in the issue tab. Make sure that the feature aligns with the direction of the project. Pull Request Before starting a pull request, create an issue requesting the feature you would like to see and implement. If you are fixing a bug, create also an issue to be able to track the problem. State that you would like to work on that. The team will reply to the issue as soon as possible, discussing the proposal if needed. This guarantee that later on the Pull Request we don't reject the proposal without having a discussion first and we don't waste time. In general, the process to create a pull request is: Create an issue describing the bug or feature and state you would like to work on that. The team will cheer you and/or discuss with you the issue. Fork the project. Clone your forked project and create a git branch. Make the necessary code changes in as many commits as you want. The commit message should follow this convention: :emoji: Short description #IssueID Long description if needed. Create a pull request. After reviewing your changes and making any new commits if needed, the team will approve and merge it. For a complete list of emoji description see this repository . Code Guidelines We follow the DotNet Runtime coding style . File headers ✔️ DO put the license in the file header with this format: // // <FileName>.cs // // Author: // <AuthorName> <email@example.com> // // Copyright (c) <Year> <AuthorName> // // Permission is hereby granted, free of charge, to any person obtaining a copy // of this software and associated documentation files (the \"Software\"), to deal // in the Software without restriction, including without limitation the rights // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell // copies of the Software, and to permit persons to whom the Software is // furnished to do so, subject to the following conditions: // // The above copyright notice and this permission notice shall be included in // all copies or substantial portions of the Software. // // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN // THE SOFTWARE. Usings ✔️ DO put the using inside the namespace. ✔️ DO include all the namespaces you are using. ✔️ DO use the using statement for IDisposable types."
  },
  "guides/First-Steps.html": {
    "href": "guides/First-Steps.html",
    "title": "First steps | GuJian3 Manager",
    "keywords": "First steps Welcome to this project!"
  },
  "index.html": {
    "href": "index.html",
    "title": "GuJian3Manager | GuJian3 Manager",
    "keywords": "GuJian3Manager Tools for GuJian 3 files. Data files are compressed with oodle. You need to copy oo2core_6_win64.dll (included in the game) into the app folder. .xxx files are encrypted with XXTEA encryption. Building the app git clone https://github.com/Kaplas80/GuJian3Manager.git cd GuJian3Manager/src dotnet build Usage Show data files info GuJian3Tool.exe info <path_to_303.idx> Extract all data files GuJian3Tool.exe extract <path_to_303.idx> <output_directory> Extract single data file GuJian3Tool.exe extract-single <path_to_dataXXX> <output_directory> [--index <path_to_303.idx>] Index path is optional, but if you don't use it, the files will be extracted without readable name. Add / Replace files in data files GuJian3Tool.exe build <path_to_new_files> <path_to_303.idx> The new files have to have the full path to work properly. For example: to replace the english fonts in game, you have to place the files in: <some_path>\\asset\\interface\\Resource_en\\font and execute the app using: GuJian3Tool.exe build some_path path\\to\\303.idx Decrypt file GuJian3Tool.exe decrypt <path_to_xxx_file> <output_file> [--key encryption_key] Encryption key is optional. These 4 files has a unknown encryption key, so they can not be decrypted: asset\\maps\\m24\\elems.xxx asset\\interface\\Resource\\movie\\EDtxt.xxx asset\\interface\\Resource\\movie\\OPtxt.xxx asset\\interface\\Resource_cht\\movie\\EDtxt.xxx Encrypt file GuJian3Tool.exe encrypt <input_file> <output_file> [--key encryption_key] Encryption key is optional. Extract game data to JSON GuJian3Tool.exe extract-json <path_to_text.bin> <output_json_file> NOTE: The input file is a decrypted exe section. See alanm mod loader . Build game data from JSON GuJian3Tool.exe build-json <input_json_file> <output_file> Extract game strings to PO GuJian3Tool.exe extract-text <path_to_text.bin> <output_directory> NOTE: The input file is a decrypted exe section. See alanm mod loader . Replace strings in game data GuJian3Tool.exe build-text <path_to_text.bin> <po_directory> <output_file> NOTE: The input file is a decrypted exe section. See alanm mod loader . Credits Thanks to Pleonex for Yarhl and for identifying XXTEA algorithm. Thanks to DARKSiDERS for finding all the encryption keys. Thanks to JKAnderson for the OodleWrapper . Thanks to eprilx for the Gujian3TextEditor . Thanks to alanm for the mod loader ."
  },
  "README.html": {
    "href": "README.html",
    "title": "GuJian3Manager | GuJian3 Manager",
    "keywords": "GuJian3Manager Tools for GuJian 3 files. Data files are compressed with oodle. You need to copy oo2core_6_win64.dll (included in the game) into the app folder. .xxx files are encrypted with XXTEA encryption. Building the app git clone https://github.com/Kaplas80/GuJian3Manager.git cd GuJian3Manager/src dotnet build Usage Show data files info GuJian3Tool.exe info <path_to_303.idx> Extract all data files GuJian3Tool.exe extract <path_to_303.idx> <output_directory> Extract single data file GuJian3Tool.exe extract-single <path_to_dataXXX> <output_directory> [--index <path_to_303.idx>] Index path is optional, but if you don't use it, the files will be extracted without readable name. Add / Replace files in data files GuJian3Tool.exe build <path_to_new_files> <path_to_303.idx> The new files have to have the full path to work properly. For example: to replace the english fonts in game, you have to place the files in: <some_path>\\asset\\interface\\Resource_en\\font and execute the app using: GuJian3Tool.exe build some_path path\\to\\303.idx Decrypt file GuJian3Tool.exe decrypt <path_to_xxx_file> <output_file> [--key encryption_key] Encryption key is optional. These 4 files has a unknown encryption key, so they can not be decrypted: asset\\maps\\m24\\elems.xxx asset\\interface\\Resource\\movie\\EDtxt.xxx asset\\interface\\Resource\\movie\\OPtxt.xxx asset\\interface\\Resource_cht\\movie\\EDtxt.xxx Encrypt file GuJian3Tool.exe encrypt <input_file> <output_file> [--key encryption_key] Encryption key is optional. Extract game data to JSON GuJian3Tool.exe extract-json <path_to_text.bin> <output_json_file> NOTE: The input file is a decrypted exe section. See alanm mod loader . Build game data from JSON GuJian3Tool.exe build-json <input_json_file> <output_file> Extract game strings to PO GuJian3Tool.exe extract-text <path_to_text.bin> <output_directory> NOTE: The input file is a decrypted exe section. See alanm mod loader . Replace strings in game data GuJian3Tool.exe build-text <path_to_text.bin> <po_directory> <output_file> NOTE: The input file is a decrypted exe section. See alanm mod loader . Credits Thanks to Pleonex for Yarhl and for identifying XXTEA algorithm. Thanks to DARKSiDERS for finding all the encryption keys. Thanks to JKAnderson for the OodleWrapper . Thanks to eprilx for the Gujian3TextEditor . Thanks to alanm for the mod loader ."
  }
}